import { Button, Checkbox, FormControlLabel } from "@mui/material";
import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import type { NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useForm } from "react-hook-form";
import { env } from "../env/client.mjs";

type Interests = {
  x: boolean;
  y: boolean;
  z: boolean;
};

const Home: NextPage = () => {
  const { data: session } = useSession();
  const queryClient = useQueryClient();
  const { data: interests } = useQuery<Interests, Error>(
    ["interests"],
    async (): Promise<Interests> => {
      const res = await fetch(
        env.NEXT_PUBLIC_API_URL + `/user/${session?.user?.id}`
      );
      const arr = (await res.json()) as Interests;
      return arr;
    }
  );
  const { mutate } = useMutation(
    ["interests"],

    (interests: Interests) => {
      return fetch(env.NEXT_PUBLIC_API_URL + "/interests", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(interests),
      });
    },
    { onSuccess: () => queryClient.invalidateQueries(["interests"]) }
  );

  const { register, handleSubmit } = useForm<Interests>({
    defaultValues: interests,
  });

  const onSubmit = (data: Interests) => {
    console.log(data);
    mutate(data)
  };

  return (
    <>
      <Head>
        <title>AI Club Service Project</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-purple-700">
          <span className="text-purple-300">AI</span> Club Service Project
        </h1>
        <div className="bg-purple-300 p-4 rounded">
          {session && <button onClick={() => signOut()}>Sign Out</button>}
          {!session && (
            <button onClick={() => signIn("google")}>Sign In</button>
          )}
        </div>
        <form onSubmit={handleSubmit(onSubmit)}>
          <h2>Interests</h2>
          <FormControlLabel
            label="x"
            control={<Checkbox {...register("x")} />}
          />

          <FormControlLabel
            label="y"
            control={<Checkbox {...register("y")} />}
          />
          <FormControlLabel
            label="z"
            control={<Checkbox {...register("z")} />}
          />
          <Button
            className="bg-blue-500"
            type="submit"
            color="primary"
            variant="contained"
          >
            Update
          </Button>
        </form>
      </main>
    </>
  );
};

export default Home;
